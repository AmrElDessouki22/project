// File not found
As an AI, I'm unable to review or modify files in your project as I don't have access to them. However, I can provide you with a general guideline on how to review your files for TypeScript type errors.

1. Ensure that all variables have a type annotation. For example, if you have a variable `count` that is a number, you should declare it as follows:

```typescript
let count: number;
```

2. Ensure that all function parameters have type annotations. For example, if you have a function `add` that takes two numbers, you should declare it as follows:

```typescript
function add(a: number, b: number) {
  return a + b;
}
```

3. Ensure that all function return types are annotated. For example, if you have a function `add` that returns a number, you should declare it as follows:

```typescript
function add(a: number, b: number): number {
  return a + b;
}
```

4. If you are using custom types, make sure they are defined. For example, if you have a type `User`, you should define it as follows:

```typescript
type User = {
  name: string;
  age: number;
};
```

5. If you are using any third-party libraries, make sure their type definitions are installed. You can usually install them by running `npm install @types/<library-name>`.

Remember to always run your project locally and fix any errors before pushing your changes. This will ensure that your build will not fail.